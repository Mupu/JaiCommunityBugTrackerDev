# [ ] cross platform support

# [x] Create Label on Issue, PR, and (??test suit??) if not exist
# [x] Add label on Issue/PR create
# [x] Jai Version Task
# [x] refactor to share js files
# [x] mention issue from PR
# [x] create message that further discussion are supposed to be held on issue
# [x] Update issue status on !Emailed
# [x] parse !jonsaid
# [x] PR and issue template (issue: i will make pr checkbox)
# [x] parse description
# [x] parse and add not emailed tag (also remove it on emiledin)
# [x] parse code snippet if single file
# [x] parse code description if single file
# [~] jai dropdown and parsing of older version
# [x] automated PR for single file 
# [x] JonSaid add date
# [x] close PR update to parse the things
# [x] validate_PR_and_merge_automation
# [x] add broken platform info
# [ ] label colors
# [x] issue mention not working after PR create
# [ ] assign original owner to issue tracker
# [x] commit the test_result.json, is there any other way around that? we just 
    # use it to track new issues. Maybe we could check the issues history of the test
    # and do the things we need to do, when we see it doesnt have any entries?
# [x] rename PR file to new issue number, so we know which file belongs to what issue
    # make sure it checks if it is a directory. Not sure how well we can handle that case
    # in confidently doing the right thing. If it is just a single file in the commit we know
    # that is the bug.
    # Scan all files, make sure its either a single file in bug dir, or a single folder. 
    # Otherwisse reject with comment.
# [x] rethink needed fields in depth
# [ ] make issue/pr mention use link instead of message?
# [x] test security
# [ ] test if you can edit the autocreated pr from external user. Make user the owner of the pr somehow?

# [x] Auto run Testsuit on push
# [x] create test result json
# [x] run for past 3-5 jai versions
# [x] gather all test date, get it inot actions and do comparisons
# [x] new issure tracker design
# [x] Update issue on test results
#     [x] change state, dates, labels
#     [x] how to map name to issue number? maybe we DO need an id
# [ ] summary tracker design
# [ ] Update summary on test results
#     [ ] link issue number
#     [ ] foldable source code if single file, otherwise link
#     [ ] add 'new' section, if reported at compilerversion (could still bebroken backwards) 
#         or reopen compiler version (!= last encounter, maybe change that?)
#     [ ] column ordering?
#     [ ] recently fixed section (last 2 compiler versions?)
# [x] Auto run testsuit on approval of PR to check it actually crashes

name: Create Issue on PR Merge

on:
  workflow_dispatch: # Manual trigger
  # pull_request:
  #   types: [closed, edited] # uncomment pr merge below

jobs:  
  create_issue:
    runs-on: [self-hosted, windows]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Create a new issue
      uses: actions/github-script@v7
      # if: github.event.pull_request.merged == true
      with:
        script: |
          const createTrackingIssueFromPR = require('./.github/workflows/create_tracking_issue_from_PR.js');
          await createTrackingIssueFromPR({ github, context, exec });
          
