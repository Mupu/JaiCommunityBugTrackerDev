# [ ] cross platform support

# [~] Create Label on Issue, PR, and (??test suit??) if not exist
# [x] Add label on Issue/PR create
# [x] Jai Version Task
# [x] refactor to share js files
# [x] mention issue from PR
# [x] create message that further discussion are supposed to be held on issue
# [x] Update issue status on !Emailed
# [x] parse !jonsaid
# [x] PR and issue template (issue: i will make pr checkbox)
# [x] parse description
# [x] parse and add not emailed tag (also remove it on emiledin)
# [x] parse code snippet if single file
# [x] parse code description if single file
# [~] jai dropdown and parsing of older version
# [x] automated PR for single file 
# [x] JonSaid add date
# [ ] close PR update to parse the things
# [ ] rethink needed fields in depth
# [ ] make issue/pr mention use link instead of message?
# [ ] issue name (clasification only) from PR name or classification dropdown?

# [x] Auto run Testsuit on push
# [ ] create test result json
# [ ] run for past 3-5 jai versions
# [ ] Update issue on test results
#     [ ] change state, dates, labels
#     [ ] how to map name to issue number? maybe we DO need an id
# [ ] Update readme on test results
#     [ ] link issue number
#     [ ] foldable source code if single file, otherwise link
#     [ ] add 'new' section, if reported at compilerversion (could still bebroken backwards) 
#         or reopen compiler version (!= last encounter, maybe change that?)
#     [ ] column ordering?
#     [ ] recently fixed section (last 2 compiler versions?)
# [ ] (Auto run testsuit on approval of PR)

name: Create Issue on PR Merge

on:
  workflow_dispatch: # Manual trigger
  # push:
  #   branches:
  #     - master
  pull_request:
    types: [closed]

jobs:  
  create_issue:
    runs-on: [self-hosted, windows]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Create a new issue
      uses: actions/github-script@v7
      if: github.event.pull_request.merged == true
      with:
        script: |
          const createIssue = require('./.github/workflows/create_issue.js');
          await createIssue({github, context});
          
