name: PR Checker

on:
  workflow_dispatch: # Manual trigger
  pull_request_target:
    types: [opened, edited, synchronize]

jobs:
  workflow-modification-check:
    runs-on: [ubuntu-latest]

    # @todo Make sure same version gets checked out that was previously checked. Race condition
    #       maybe just merge the two steps, and make sure we just never call the js file if changes 
    #       are detected
    steps:
      - name: Check if '.github' folder was modified
        uses: actions/github-script@v7
        with:
          script: |
            // Get PR data
            const { data: pr } = await github.rest.pulls.get({
              ...context.repo,
              pull_number: context.issue.number
            });

            // Check that its a SB or BB
            const match = pr.title.match(/^\[([SB]B)\]:/)?.[1]
            if (!match) {
              console.log('This PR is not a SB or BB, ignoring it.');
              process.exit(1);; // its not a SB or BB, ignore it since its probably a normal PR
            }

            const { data } = await github.rest.pulls.listFiles({
              ...context.repo,
              pull_number: context.issue.number,
              per_page: 100
            });

            const filePaths = data.map(file => file.filename);

            // @todo not supported yet
            if (filePaths.length >= 100) {
              await github.rest.issues.createComment({
                ...context.repo,
                issue_number: context.issue.number,
                body: `@Mupu, This PR has more than 100 files, please make this work and re-run the checks.`
              })
              process.exit(1);
            }

            // Make sure .github folder is not modified
            if (filePaths.some(filePath => filePath.includes('.github'))) {
              await github.rest.issues.createComment({
                ...context.repo,
                issue_number: context.issue.number,
                body: `@Mupu, This PR has modified the .github folder, which is illegal!`
              })
              console.error('This PR has modified the .github folder, which is illegal!');
              process.exit(1);
            }

  validate_pr_structure:
    runs-on: [self-hosted, windows]
    needs: workflow-modification-check

    steps:
      # https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows#pull_request_target
      # this is pull_request_target it will checkout the base branch
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: PR Checker
        uses: actions/github-script@v7
        with:
          script: |
            const { validatePRStructure } = require('./.github/workflows/validate_PR_and_merge_automation.js');
            await validatePRStructure({ github, context });

  validate_added_test_and_merge_pr:
    runs-on: [self-hosted, windows]
    needs: validate_pr_structure
    # fif: github.event.pull_request.head.repo.fork == true || github.event.pull_request.user.type == 'Bot'

    # This is insecure because it (1) checks out the PRs code and (2) runs jai code from the PR which could be malicious
    # so we need to make sure it got approved
    environment: test # @todo do we only wanna run this on forks?

    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      # Use GITHUB_TOKEN so we dont trigger a infinite loop
      # when updateing the PR

      # @todo potentially unsafe, the only reason we are using this is because
      # updating many files via the api is bad?
      # check again if maybe a folder is also just one call then we could checkout the base branch instead
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Validate new Test and Merge Pull Request
        uses: actions/github-script@v7
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          script: |
            const { validateAddedTestAndMergeOnSuccess } = require('./.github/workflows/validate_PR_and_merge_automation.js');
            await validateAddedTestAndMergeOnSuccess({ github, exec, io, contextRepo: context.repo, prNumber: context.issue.number });

      # # Not sure why the merge below only works after Checking out the PR again.
      # # If we dont do this, the merge will fail with 'Head branch is out of date'
      # # Use the app-token to checkout the PR, so we can trigger
      # # the push event when merging the PR
      # - name: Checkout Updated PR
      #   uses: actions/checkout@v4
      #   with:
      #     token: ${{ steps.app-token.outputs.token }}
      #     persist-credentials: false
      #     ref: ${{ github.event.pull_request.head.ref }}

      # - name: Merge PR
      #   uses: actions/github-script@v7
      #   with:
      #     github-token: ${{ steps.app-token.outputs.token }}
      #     script: |
      #       const mergeResponse = await github.rest.pulls.merge({
      #         ...context.repo,
      #         pull_number: context.issue.number,
      #         merge_method: 'squash'  // Use 'merge', 'squash', or 'rebase' depending on your needs
      #       });

            
