name: Handle Issue Comment

on:
  issue_comment:
    types: [created, edited]

# CHECK THAT COMMENT IS ON A ISSUE FROM BOT!

jobs:
  handle_issue_comment:
    runs-on: [self-hosted, windows]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Check if issue was created by an allowed user
      id: check_issue
      uses: actions/github-script@v7
      with:
        script: |
          const allowedUsers = ['github-actions[bot]'];
          const issueCreator = context.payload.issue.user.login;

          if (allowedUsers.includes(issueCreator)) {
            return true;
          } else {
            return false;
          }

    - name: Extract Command
      id: extract_commands
      uses: actions/github-script@v7
      with:
        script: |
          const commentId = context.payload.comment.id;
          const { data: comment } = await github.rest.issues.getComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            comment_id: commentId
          });
          core.setOutput('comment', comment);

          const containsEmailedIn = /!EmailedIn/i.test(comment.body); // Case-insensitive check for !EmailedIn
          core.setOutput('emailedIn', containsEmailedIn);

          const containsJonSaid = /!JonSaid/i.test(comment.body); // Case-insensitive check for !EmailedIn
          core.setOutput('jonSaid', containsJonSaid);
          
    
    - name: Handle !EmailedIn
      if: ${{ steps.extract_commands.outputs.emailedIn == 'true' && steps.check_issue.outputs.result == 'true' }}
      uses: actions/github-script@v7
      with:
        script: |
          const { handleEmailedIn } = require('./.github/workflows/handle_issue_command.js');
          await handleEmailedIn({github, context});

    - name: Handle !JonSaid
      if: ${{ steps.extract_commands.outputs.jonSaid == 'true' && steps.check_issue.outputs.result == 'true' }}
      uses: actions/github-script@v7
      with:
        script: |
          const { handleJonSaid } = require('./.github/workflows/handle_issue_command.js');
          await handleJonSaid({github, context, core, comment: ${{ steps.extract_commands.outputs.comment }} });
