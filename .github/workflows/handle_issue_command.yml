name: Handle Issue Comment

on:
  issue_comment:
    types: [created, edited]
  

jobs:
  handle_issue_comment:
    runs-on: [self-hosted, windows]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Extract Command
      id: extract_commands
      uses: actions/github-script@v7
      with:
        script: |
          const { data: issue } = await github.rest.issues.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number
          });
          core.setOutput('issue', issue);
          
          const body = issue.body;
          const containsEmailedIn = /!EmailedIn/i.test(body); // Case-insensitive check for !EmailedIn
          core.setOutput('emailedIn', containsEmailedIn);
          
    
    - name: Handle !emailed
      if: ${{ steps.extract_commands.outputs.emailedIn }} == true
      uses: actions/github-script@v7
      with:
        script: |
          function parseIssueBody(issueBody) {
            // Extract the row that contains the variable values
            const regex = /\|\s*(.*?)\s*\|/g;
            const matches = [...issueBody.matchAll(regex)];

            // Remove the first two matches (table header and separator)
            const fields = matches.slice(2).map(match => match[1].trim());

            // Define variable names
            const [testName, status, emailedIn, firstEncounter, firstEncounterVersion, lastEncountered, lastEncounteredVersion, fixDate, fixDateVersion] = fields;

            return {
                testName,
                status,
                emailedIn,
                firstEncounter,
                firstEncounterVersion,
                lastEncountered,
                lastEncounteredVersion,
                fixDate,
                fixDateVersion
            };
          }
          
          const issue = ${{ steps.extract_commands.outputs.issue }};
          console.log(issue.body);

          const parsedFields = parseIssueBody(issue.body);
          console.log(parsedFields);
